openapi: 3.0.1
info:
  title: Offices System
  version: 1.0.0
  description: This API allows you to manage the reservations of the sites within the office.
  contact:
    name: Alberto Iglesias
    email: aiglesiass@axpe.com
externalDocs:
  url: "https://github.com/axpecloud/modernapps-api-internal-development/tree/master/Task-Manager"
  description: External documentation.
servers:
  - url: "{protocol}://{host}:{port}/{basePath}/{MajorVersion}"
    variables:
      protocol:
        description: Protocol.
        default: https
      host:
        description: Host.
        default: 54.217.2.102
      port:
        description: Port.
        default: "8000"
      basePath:
        description: BasePath.
        default: offices-system
      MajorVersion:
        description: MajorVersion.
        default: v1
tags:
  - name: sectors
    description: Sections into which the office is divided.
  - name: offices
    description: Place where the company's work is carried out.
  - name: workstations
    description: Worstations to which workers coming to the office may be assigned.
paths:
  /offices:
    parameters:
      - $ref: "#/components/parameters/AcceptLanguageHeader"
      - $ref: "#/components/parameters/XRequestIdHeader"
    get:
      security:
        - oAuthSample:
            - offices-system.offices.read
            - offices-system.ALL.ALL
            - offices-system.ALL.read
            - offices-system.offices.ALL
      tags:
        - offices
      operationId: getOffices
      summary: List of offices.
      description: List of offices.
      parameters:
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/Offset"
        - name: address.province
          description: Field to filter the offices by the specific provinces.
          in: query
          required: false
          schema:
            type: string
            maxLength: 50
      responses:
        "200":
          $ref: "#/components/responses/200GetAllOffices"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "405":
          $ref: "#/components/responses/405"
        "406":
          $ref: "#/components/responses/406"
        "413":
          $ref: "#/components/responses/413"
        "414":
          $ref: "#/components/responses/414"
        "422":
          $ref: "#/components/responses/422"
        "423":
          $ref: "#/components/responses/423"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        "501":
          $ref: "#/components/responses/501"
        "502":
          $ref: "#/components/responses/502"
        "503":
          $ref: "#/components/responses/503"
        "504":
          $ref: "#/components/responses/504"
    post:
      security:
        - oAuthSample:
            - offices-system.offices.write
            - offices-system.ALL.ALL
            - offices-system.ALL.write
            - offices-system.offices.ALL
      tags:
        - offices
      summary: Create a new office.
      description: Add a new office into the list.
      operationId: postOffices
      requestBody:
        $ref: "#/components/requestBodies/OfficeBody"
      responses:
        "201":
          $ref: "#/components/responses/201"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "405":
          $ref: "#/components/responses/405"
        "406":
          $ref: "#/components/responses/406"
        "413":
          $ref: "#/components/responses/413"
        "414":
          $ref: "#/components/responses/414"
        "415":
          $ref: "#/components/responses/415"
        "422":
          $ref: "#/components/responses/422"
        "423":
          $ref: "#/components/responses/423"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        "501":
          $ref: "#/components/responses/501"
        "502":
          $ref: "#/components/responses/502"
        "503":
          $ref: "#/components/responses/503"
        "504":
          $ref: "#/components/responses/504"
  "/offices/{officeId}":
    parameters:
      - $ref: "#/components/parameters/AcceptLanguageHeader"
      - $ref: "#/components/parameters/XRequestIdHeader"
      - $ref: "#/components/parameters/OfficeIdPath"
    get:
      security:
        - oAuthSample:
            - offices-system.offices.read
            - offices-system.ALL.ALL
            - offices-system.ALL.read
            - offices-system.offices.ALL
      tags:
        - offices
      summary: Office information.
      description: Retrieve the information of the office with the matching code.
      operationId: getOfficesOfficeId
      responses:
        "200":
          $ref: "#/components/responses/200GetOfficeDetail"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "405":
          $ref: "#/components/responses/405"
        "406":
          $ref: "#/components/responses/406"
        "413":
          $ref: "#/components/responses/413"
        "414":
          $ref: "#/components/responses/414"
        "422":
          $ref: "#/components/responses/422"
        "423":
          $ref: "#/components/responses/423"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        "501":
          $ref: "#/components/responses/501"
        "502":
          $ref: "#/components/responses/502"
        "503":
          $ref: "#/components/responses/503"
        "504":
          $ref: "#/components/responses/504"
    put:
      security:
        - oAuthSample:
            - offices-system.offices.update
            - offices-system.ALL.ALL
            - offices-system.ALL.update
            - offices-system.offices.ALL
      tags:
        - offices
      summary: Update information from a office.
      description: Update of the information of a office with the matching Id.
      operationId: putOfficesOfficeId
      requestBody:
        $ref: "#/components/requestBodies/OfficeBody"
      responses:
        "204":
          $ref: "#/components/responses/204"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "405":
          $ref: "#/components/responses/405"
        "406":
          $ref: "#/components/responses/406"
        "409":
          $ref: "#/components/responses/409"
        "413":
          $ref: "#/components/responses/413"
        "414":
          $ref: "#/components/responses/414"
        "415":
          $ref: "#/components/responses/415"
        "422":
          $ref: "#/components/responses/422"
        "423":
          $ref: "#/components/responses/423"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        "501":
          $ref: "#/components/responses/501"
        "502":
          $ref: "#/components/responses/502"
        "503":
          $ref: "#/components/responses/503"
        "504":
          $ref: "#/components/responses/504"
    delete:
      security:
        - oAuthSample:
            - offices-system.offices.delete
            - offices-system.ALL.ALL
            - offices-system.ALL.delete
            - offices-system.offices.ALL
      tags:
        - offices
      summary: Delete specific office.
      description: Delete the information of the office with the matching Id.
      operationId: deleteOfficesOfficeId
      responses:
        "204":
          $ref: "#/components/responses/204"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "405":
          $ref: "#/components/responses/405"
        "406":
          $ref: "#/components/responses/406"
        "409":
          $ref: "#/components/responses/409"
        "413":
          $ref: "#/components/responses/413"
        "414":
          $ref: "#/components/responses/414"
        "422":
          $ref: "#/components/responses/422"
        "423":
          $ref: "#/components/responses/423"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        "501":
          $ref: "#/components/responses/501"
        "502":
          $ref: "#/components/responses/502"
        "503":
          $ref: "#/components/responses/503"
        "504":
          $ref: "#/components/responses/504"
  "/offices/{officeId}/sectors":
    parameters:
      - $ref: "#/components/parameters/AcceptLanguageHeader"
      - $ref: "#/components/parameters/XRequestIdHeader"
      - $ref: "#/components/parameters/OfficeIdPath"
    get:
      security:
        - oAuthSample:
            - offices-system.sectors.read
            - offices-system.ALL.ALL
            - offices-system.ALL.read
            - offices-system.sectors.ALL
      tags:
        - sectors
      operationId: getOfficesOfficeIdSectors
      summary: List of sectors.
      description: List of sectors.
      parameters:
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/Offset"
      responses:
        "200":
          $ref: "#/components/responses/200GetAllSectors"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "405":
          $ref: "#/components/responses/405"
        "406":
          $ref: "#/components/responses/406"
        "413":
          $ref: "#/components/responses/413"
        "414":
          $ref: "#/components/responses/414"
        "422":
          $ref: "#/components/responses/422"
        "423":
          $ref: "#/components/responses/423"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        "501":
          $ref: "#/components/responses/501"
        "502":
          $ref: "#/components/responses/502"
        "503":
          $ref: "#/components/responses/503"
        "504":
          $ref: "#/components/responses/504"
    post:
      security:
        - oAuthSample:
            - offices-system.sectors.write
            - offices-system.ALL.ALL
            - offices-system.ALL.write
            - offices-system.sectors.ALL
      tags:
        - sectors
      summary: Create a new sector.
      description: Add a new sector into the offices.
      operationId: postOfficesOfficeIdSectors
      requestBody:
        $ref: "#/components/requestBodies/SectorBody"
      responses:
        "201":
          $ref: "#/components/responses/201"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "405":
          $ref: "#/components/responses/405"
        "406":
          $ref: "#/components/responses/406"
        "413":
          $ref: "#/components/responses/413"
        "414":
          $ref: "#/components/responses/414"
        "415":
          $ref: "#/components/responses/415"
        "422":
          $ref: "#/components/responses/422"
        "423":
          $ref: "#/components/responses/423"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        "501":
          $ref: "#/components/responses/501"
        "502":
          $ref: "#/components/responses/502"
        "503":
          $ref: "#/components/responses/503"
        "504":
          $ref: "#/components/responses/504"
  "/offices/{officeId}/sectors/{sectorId}":
    parameters:
      - $ref: "#/components/parameters/AcceptLanguageHeader"
      - $ref: "#/components/parameters/XRequestIdHeader"
      - $ref: "#/components/parameters/OfficeIdPath"
      - $ref: "#/components/parameters/SectorIdPath"
    get:
      security:
        - oAuthSample:
            - offices-system.sectors.read
            - offices-system.ALL.ALL
            - offices-system.ALL.read
            - offices-system.sectors.ALL
      tags:
        - sectors
      summary: Sector information.
      description: Retrieve the information of the sector with the matching code.
      operationId: getOfficesOfficeIdSectorsSectorId
      responses:
        "200":
          $ref: "#/components/responses/200GetSectorDetail"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "405":
          $ref: "#/components/responses/405"
        "406":
          $ref: "#/components/responses/406"
        "413":
          $ref: "#/components/responses/413"
        "414":
          $ref: "#/components/responses/414"
        "422":
          $ref: "#/components/responses/422"
        "423":
          $ref: "#/components/responses/423"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        "501":
          $ref: "#/components/responses/501"
        "502":
          $ref: "#/components/responses/502"
        "503":
          $ref: "#/components/responses/503"
        "504":
          $ref: "#/components/responses/504"
    put:
      security:
        - oAuthSample:
            - offices-system.sectors.update
            - offices-system.ALL.ALL
            - offices-system.ALL.update
            - offices-system.sectors.ALL
      tags:
        - sectors
      summary: Update information from a sector.
      description: Update of the information of a sector with the matching Id.
      operationId: putOfficesOfficeIdSectorsSectorId
      requestBody:
        $ref: "#/components/requestBodies/SectorBody"
      responses:
        "204":
          $ref: "#/components/responses/204"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "405":
          $ref: "#/components/responses/405"
        "406":
          $ref: "#/components/responses/406"
        "409":
          $ref: "#/components/responses/409"
        "413":
          $ref: "#/components/responses/413"
        "414":
          $ref: "#/components/responses/414"
        "415":
          $ref: "#/components/responses/415"
        "422":
          $ref: "#/components/responses/422"
        "423":
          $ref: "#/components/responses/423"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        "501":
          $ref: "#/components/responses/501"
        "502":
          $ref: "#/components/responses/502"
        "503":
          $ref: "#/components/responses/503"
        "504":
          $ref: "#/components/responses/504"
    delete:
      security:
        - oAuthSample:
            - offices-system.sectors.delete
            - offices-system.ALL.ALL
            - offices-system.ALL.delete
            - offices-system.sectors.ALL
      tags:
        - sectors
      summary: Delete specific sector.
      description: Delete the information of the sector with the matching Id.
      operationId: deleteOfficesOfficeIdSectorsSectorId
      responses:
        "204":
          $ref: "#/components/responses/204"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "405":
          $ref: "#/components/responses/405"
        "406":
          $ref: "#/components/responses/406"
        "409":
          $ref: "#/components/responses/409"
        "413":
          $ref: "#/components/responses/413"
        "414":
          $ref: "#/components/responses/414"
        "422":
          $ref: "#/components/responses/422"
        "423":
          $ref: "#/components/responses/423"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        "501":
          $ref: "#/components/responses/501"
        "502":
          $ref: "#/components/responses/502"
        "503":
          $ref: "#/components/responses/503"
        "504":
          $ref: "#/components/responses/504"
  "/offices/{officeId}/sectors/{sectorId}/workstations":
    parameters:
      - $ref: "#/components/parameters/AcceptLanguageHeader"
      - $ref: "#/components/parameters/XRequestIdHeader"
      - $ref: "#/components/parameters/OfficeIdPath"
      - $ref: "#/components/parameters/SectorIdPath"
    get:
      security:
        - oAuthSample:
            - offices-system.workstations.read
            - offices-system.ALL.ALL
            - offices-system.ALL.read
            - offices-system.workstations.ALL
      tags:
        - workstations
      operationId: getOfficesOfficeIdSectorsSectorIdWorkstations
      summary: List of Workstations.
      description: List of Workstations into the sector.
      parameters:
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/Offset"
      responses:
        "200":
          $ref: "#/components/responses/200GetAllWorkstations"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "405":
          $ref: "#/components/responses/405"
        "406":
          $ref: "#/components/responses/406"
        "413":
          $ref: "#/components/responses/413"
        "414":
          $ref: "#/components/responses/414"
        "422":
          $ref: "#/components/responses/422"
        "423":
          $ref: "#/components/responses/423"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        "501":
          $ref: "#/components/responses/501"
        "502":
          $ref: "#/components/responses/502"
        "503":
          $ref: "#/components/responses/503"
        "504":
          $ref: "#/components/responses/504"
    post:
      security:
        - oAuthSample:
            - offices-system.workstations.write
            - offices-system.ALL.ALL
            - offices-system.ALL.write
            - offices-system.workstations.ALL
      tags:
        - workstations
      summary: Create a new workstations.
      description: Add a new area into the workstations.
      operationId: postOfficesOfficeIdSectorsSectorIdWorkstations
      requestBody:
        $ref: "#/components/requestBodies/WorkstationBody"
      responses:
        "201":
          $ref: "#/components/responses/201"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "405":
          $ref: "#/components/responses/405"
        "406":
          $ref: "#/components/responses/406"
        "413":
          $ref: "#/components/responses/413"
        "414":
          $ref: "#/components/responses/414"
        "415":
          $ref: "#/components/responses/415"
        "422":
          $ref: "#/components/responses/422"
        "423":
          $ref: "#/components/responses/423"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        "501":
          $ref: "#/components/responses/501"
        "502":
          $ref: "#/components/responses/502"
        "503":
          $ref: "#/components/responses/503"
        "504":
          $ref: "#/components/responses/504"
  "/offices/{officeId}/sectors/{sectorId}/workstations/{workstationId}":
    parameters:
      - $ref: "#/components/parameters/AcceptLanguageHeader"
      - $ref: "#/components/parameters/XRequestIdHeader"
      - $ref: "#/components/parameters/OfficeIdPath"
      - $ref: "#/components/parameters/SectorIdPath"
      - $ref: "#/components/parameters/WorkstationIdPath"
    get:
      security:
        - oAuthSample:
            - offices-system.workstations.read
            - offices-system.ALL.ALL
            - offices-system.ALL.read
            - offices-system.workstations.ALL
      tags:
        - workstations
      summary: Wokstation information.
      description: Retrieve the information of the sector with the matching code.
      operationId: getOfficesOfficeIdSectorsSectorIdWorkstationsWorkstationId
      responses:
        "200":
          $ref: "#/components/responses/200GetWorkstationDetail"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "405":
          $ref: "#/components/responses/405"
        "406":
          $ref: "#/components/responses/406"
        "413":
          $ref: "#/components/responses/413"
        "414":
          $ref: "#/components/responses/414"
        "422":
          $ref: "#/components/responses/422"
        "423":
          $ref: "#/components/responses/423"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        "501":
          $ref: "#/components/responses/501"
        "502":
          $ref: "#/components/responses/502"
        "503":
          $ref: "#/components/responses/503"
        "504":
          $ref: "#/components/responses/504"
    put:
      security:
        - oAuthSample:
            - offices-system.workstations.update
            - offices-system.ALL.ALL
            - offices-system.ALL.update
            - offices-system.workstations.ALL
      tags:
        - workstations
      summary: Update information from a workstations.
      description: Update of the information of a workstation with the matching Id.
      operationId: putOfficesOfficeIdSectorsSectorIdWorkstationWorkstationId
      requestBody:
        $ref: "#/components/requestBodies/WorkstationBody"
      responses:
        "204":
          $ref: "#/components/responses/204"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "405":
          $ref: "#/components/responses/405"
        "406":
          $ref: "#/components/responses/406"
        "409":
          $ref: "#/components/responses/409"
        "413":
          $ref: "#/components/responses/413"
        "414":
          $ref: "#/components/responses/414"
        "415":
          $ref: "#/components/responses/415"
        "422":
          $ref: "#/components/responses/422"
        "423":
          $ref: "#/components/responses/423"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        "501":
          $ref: "#/components/responses/501"
        "502":
          $ref: "#/components/responses/502"
        "503":
          $ref: "#/components/responses/503"
        "504":
          $ref: "#/components/responses/504"
    delete:
      security:
        - oAuthSample:
            - offices-system.workstations.delete
            - offices-system.ALL.ALL
            - offices-system.ALL.delete
            - offices-system.workstations.ALL
      tags:
        - workstations
      summary: Delete specific workstation.
      description: Delete the information of the workstation with the matching Id.
      operationId: deleteOfficesOfficeIdSectorsSectorIdWorkstationWorkstationId
      responses:
        "204":
          $ref: "#/components/responses/204"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "405":
          $ref: "#/components/responses/405"
        "406":
          $ref: "#/components/responses/406"
        "409":
          $ref: "#/components/responses/409"
        "413":
          $ref: "#/components/responses/413"
        "414":
          $ref: "#/components/responses/414"
        "422":
          $ref: "#/components/responses/422"
        "423":
          $ref: "#/components/responses/423"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
        "501":
          $ref: "#/components/responses/501"
        "502":
          $ref: "#/components/responses/502"
        "503":
          $ref: "#/components/responses/503"
        "504":
          $ref: "#/components/responses/504"
components:
  schemas:
    HttpUrl:
      title: HttpUrl
      type: string
      description: Type used for URL addresses.
      pattern: '^(https?:\/\/)?([\w.-]+)(:[0-9]+)?(\/[a-zA-Z0-9/-]*)?(\?[\w=&]*)?$'
    OfficeId:
      title: OfficeId
      description: Object encapsulating the office identifier.
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          description: Office identifier.
          minimum: 1
      required:
        - officeId
    Office:
      title: Office
      type: object
      description: Object encapsulating the offices.
      properties:
        name:
          type: string
          description: Name of office.
          minLength: 1
          maxLength: 50
    OfficeData:
      title: OfficeData
      description: Office encapsulated on a data object.
      type: object
      additionalProperties: false
      properties:
        data:
          allOf:
            - $ref: "#/components/schemas/OfficeId"
            - $ref: "#/components/schemas/Office"
            - $ref: "#/components/schemas/AddressId"
            - $ref: "#/components/schemas/Address"
    OfficeResponse:
      title: OfficeResponse
      description: List of office.
      type: object
      additionalProperties: false
      properties:
        data:
          type: array
          description: List of office.
          maxItems: 100
          items:
            allOf:
              - $ref: "#/components/schemas/OfficeId"
              - $ref: "#/components/schemas/Office"
        pagination:
          $ref: "#/components/schemas/Pagination"
    Address:
      title: Address
      description: Object encompassing the physical address at which the office is located.
      type: object
      properties:
        line:
          type: string
          description: "Information that locates and identifies a specific address, as defined by postal services."
          minLength: 1
          maxLength: 100
        streetName:
          type: string
          description: Name of a street or thoroughfare.
          minLength: 1
          maxLength: 70
        buildingNumber:
          type: string
          description: Number that identifies the position of a building on a street.
          minLength: 1
          maxLength: 15
        stair:
          type: string
          description: Number or side of stairs inside a portal.
          minLength: 1
          maxLength: 15
        floor:
          type: integer
          description: Floor where the office is located.
          minimum: 0
          maximum: 50
        doorNumber:
          type: string
          description: Door number where the office is located.
          minLength: 1
          maxLength: 10
        postalCode:
          type: string
          description: "Host, protocol and port."
          minLength: 1
          maxLength: 5
        province:
          type: string
          description: Province in which the office is located.
          minLength: 1
          maxLength: 50
        country:
          type: string
          description: Country where the company is headquartered.
          pattern: "^[A-Z]{2}$"
      required:
        - line
        - streetName
        - buildingNumber
        - postalCode
        - province
        - country
    AddressId:
      title: AddressId
      type: object
      description: Object encapsulating the address identifier.
      properties:
        addressId:
          type: integer
          description: Identifier of an address.
          format: int64
          minimum: 1
      required:
        - addressId
    SectorId:
      title: SectorId
      type: object
      description: Object encapsulating the area identifier.
      properties:
        sectorId:
          type: integer
          description: Identifier of an sector.
          format: int64
          minimum: 1
      required:
        - sectorId
    Sector:
      title: Sector
      type: object
      description: Object encapsulating the sector.
      properties:
        name:
          type: string
          description: Name of Sector.
          minLength: 1
          maxLength: 30
      required:
        - name
    TypeOfSector:
      title: TypeOfSector
      type: object
      description: Object encapsulating the type of sector.
      properties:
        isPhysical:
          type: boolean
          description: Indicates if the sector in which it is located is isPhysical or not.
          default: true
      required:
        - isPhysical
    SectorData:
      title: SectorData
      type: object
      description: Object encapsulating the area identifier and the area object.
      additionalProperties: false
      properties:
        data:
          allOf:
            - $ref: "#/components/schemas/SectorId"
            - $ref: "#/components/schemas/Sector"
            - $ref: "#/components/schemas/TypeOfSector"
    SectorResponse:
      title: SectorResponse
      type: object
      description: Object encapsulating area and pagination.
      additionalProperties: false
      properties:
        data:
          type: array
          description: List of areas.
          maxItems: 100
          items:
            allOf:
              - $ref: "#/components/schemas/SectorId"
              - $ref: "#/components/schemas/Sector"
        pagination:
          $ref: "#/components/schemas/Pagination"
    WorkstationId:
      title: WorkstationId
      type: object
      description: Object encapsulating the identifier of the workstation.
      properties:
        workstationId:
          type: integer
          format: int64
          description: Workstation identifier inside the office.
          minimum: 1
      required:
        - workstationId
    WorkstationName:
      title: WorkstationName
      type: object
      description: Object encapsulating the workstation name.
      properties:
        name:
          type: string
          description: Physical place that an employee occupies within the office.
          minLength: 1
          maxLength: 30
      required:
        - name
    WorkstationState:
      title: WorkstationState
      type: object
      description: Object encapsulating the workstation state.
      properties:
        isLocked:
          type: boolean
          description: This property says if the workstation is locked or no.
      required:
        - isLocked
    WorkstationLocation:
      title: WorkstationLocation
      type: object
      description: Object encapsulating the workstation.
      properties:
        position:
          type: integer
          format: int64
          description: Position in which the workplace is located.
          minimum: 1
        xCoordinate:
          type: number
          format: float
          description: X coordinate in which the workplace is located.
          minimum: 1
        yCoordinate:
          type: number
          format: float
          description: Y coordinate in which the workplace is located.
          minimum: 1
        rotation:
          type: integer
          format: int64
          description: "Rotation in which the workplace is located, that is, if it is vertical, horizontal, etc."
          minimum: 0
          maximum: 360
      required:
        - name
        - position
        - xCoordinate
        - yCoordinate
        - rotation
    WorkstationData:
      title: WorkstationData
      type: object
      description: Object encapsulating the workstation identifier and the workstation object.
      additionalProperties: false
      properties:
        data:
          allOf:
            - $ref: "#/components/schemas/WorkstationId"
            - $ref: "#/components/schemas/WorkstationName"
            - $ref: "#/components/schemas/WorkstationLocation"
            - $ref: "#/components/schemas/WorkstationState"
    WorkstationResponse:
      title: Response
      type: object
      description: Object encapsulating table and pagination.
      additionalProperties: false
      properties:
        data:
          type: array
          description: List of workstations.
          maxItems: 100
          items:
            allOf:
              - $ref: "#/components/schemas/WorkstationId"
              - $ref: "#/components/schemas/WorkstationName"
              - $ref: "#/components/schemas/WorkstationState"
        pagination:
          $ref: "#/components/schemas/Pagination"
    Pagination:
      title: Pagination
      type: object
      description: Object which contains the pagination data in a Get method.
      properties:
        offset:
          description: "Record number from which you want to receive the number of records indicated in the limit. If it is indicated at the input, it will be the value of the query. If it is not indicated at the input, since the query is on the first page, its value will be 0."
          type: integer
          format: int32
          minimum: 0
          maximum: 255
        limit:
          description: "Number of records returned per page. If specified on entry, it will be the value of the query, otherwise it will be the default value set by the service."
          type: integer
          format: int32
          minimum: 0
          maximum: 255
        pageNumber:
          description: Page number we are on.
          type: integer
          format: int32
          minimum: 0
          maximum: 255
        totalPages:
          description: Number of pages for the indicated limit.
          type: integer
          format: int32
          minimum: 0
          maximum: 255
        totalElements:
          description: Total number of elements in the list.
          type: integer
          format: int32
          minimum: 0
          maximum: 255
        links:
          description: List of navigation links to different pages.
          type: object
          required:
            - self
          properties:
            first:
              description: |-
                Link to the first page of the list.
                The exact value depends on the data to be accessed.
                The exact content of the page depends on the input parameters provided in the request, such as the offset.
              type: object
              properties:
                href:
                  $ref: "#/components/schemas/HttpUrl"
              maxLength: 255
              pattern: '^\/[\w-]+(\/[\w-]+)*\?(_[a-zA-Z]+=\d*)(&_[a-zA-Z]+=\d*)*'
            self:
              description: |-
                Link to the first page of the list.
                The exact value depends on the data to be accessed.
                The exact content of the page depends on the input parameters provided in the request, such as the offset.
              type: object
              properties:
                href:
                  $ref: "#/components/schemas/HttpUrl"
              maxLength: 255
              pattern: '^\/[\w-]+(\/[\w-]+)*\?(_[a-zA-Z]+=\d*)(&_[a-zA-Z]+=\d*)*'
            prev:
              description: |-
                Link to the previous page of the list.
                The exact value depends on the data to be accessed.
                The exact content of the page depends on the input parameters provided in the request, such as the offset.
              type: object
              properties:
                href:
                  $ref: "#/components/schemas/HttpUrl"
              maxLength: 255
              pattern: '^\/[\w-]+(\/[\w-]+)*\?(_[a-zA-Z]+=\d*)(&_[a-zA-Z]+=\d*)*'
            next:
              description: |-
                Link to the next page of the list.
                The exact value depends on the data to be accessed.
                The exact content of the page depends on the input parameters provided in the request, such as the offset.
              type: object
              properties:
                href:
                  $ref: "#/components/schemas/HttpUrl"
              maxLength: 255
              pattern: '^\/[\w-]+(\/[\w-]+)*\?(_[a-zA-Z]+=\d*)(&_[a-zA-Z]+=\d*)*'
            last:
              description: |-
                Link to the last page of the list.
                The exact value depends on the data to be accessed.
                The exact content of the page depends on the input parameters provided in the request, such as the offset.
              type: object
              properties:
                href:
                  $ref: "#/components/schemas/HttpUrl"
              example:
                last: /accounts?_offset=40&_limit=10
              maxLength: 255
              pattern: '^\/[\w-]+(\/[\w-]+)*\?(_[a-zA-Z]+=\d*)(&_[a-zA-Z]+=\d*)*'
          additionalProperties: false
    ErrorMessage:
      title: ErrorMessage
      type: object
      description: Object returned when an error happens.
      properties:
        messages:
          type: array
          maxItems: 5
          description: List of error messages.
          items:
            type: object
            description: Information of the error produced.
            properties:
              code:
                type: string
                description: Field which briefly defines the problem.
                minLength: 1
                maxLength: 50
              message:
                type: string
                description: Message which describes the main issue.
                minLength: 1
                maxLength: 500
              type:
                type: string
                description: Describes the type of message displayed. CRITICAL- error that prevents the operation of the entire application. FATAL - error that prevents the operation of a specific functionality. ERROR - error that does not affect more features. WARNING - application works but a warning has been generated. INFO - operative info message.
                enum:
                  - CRITICAL
                  - FATAL
                  - ERROR
                  - WARNING
                  - INFO
              description:
                type: string
                description: Describes other details of the error.
                minLength: 1
                maxLength: 500
            required:
              - code
              - message
              - type
  parameters:
    AcceptLanguageHeader:
      name: Accept-Language
      description: ISO code of the language that the client accepts in response from the server.
      in: header
      required: true
      schema:
        type: string
        pattern: "^[a-z]{2}-[A-Z]{2}$"
        minLength: 1
        maxLength: 6
        example: en-EN
    XRequestIdHeader:
      name: X-Request-ID
      description: Request ID.
      in: header
      required: true
      schema:
        type: string
        pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
        format: uuid
        minLength: 1
        example: 54b9c11c-9162-45a1-a352-0d95734cd079
    OfficeIdPath:
      name: officeId
      description: Id of a specific office.
      in: path
      required: true
      schema:
        type: integer
        format: int64
        minimum: 1
    SectorIdPath:
      name: sectorId
      description: Id of a specific area.
      in: path
      required: true
      schema:
        type: integer
        format: int64
        minimum: 1
    WorkstationIdPath:
      name: workstationId
      description: Id of a specific workstation.
      in: path
      required: true
      schema:
        type: integer
        format: int64
        minimum: 1
    Limit:
      name: limit
      description: "Number of records returned per page. If specified on entry, this will be the value of the query, otherwise it will be the value value set by default."
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 10
        format: int32
    Offset:
      name: offset
      description: "Record number from which you want to receive the number of records indicated in the limit. If it is indicated at the entry, it will be the value of the query. If it is not indicated at the input, as the query is on the first page, its value will be 0."
      in: query
      required: false
      schema:
        type: integer
        minimum: 0
        maximum: 100
        default: 0
        format: int32
  headers:
    XRequestIdHeader:
      description: Request ID.
      schema:
        type: string
        pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
        format: uuid
        example: 54b9c11c-9162-45a1-a352-0d95734cd079
    Location:
      description: Gives an URL to be redirected.
      example: "https://stoplight.io/mocks/axpe/WorkstationManager/10502147/offices/5"
      schema:
        $ref: "#/components/schemas/HttpUrl"
  responses:
    "201":
      description: Created.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/XRequestIdHeader"
        Location:
          $ref: "#/components/headers/Location"
    "204":
      description: No Content.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/XRequestIdHeader"
    "400":
      description: Bad Request.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/XRequestIdHeader"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorMessage"
          examples:
            err400Example:
              value:
                errors:
                  - code: BAD_REQUEST
                    type: FATAL
                    message: Bad Request
                    description: The request is incorrect because the selected parameters are wrong or a functional error has occurred.
    "401":
      description: Unauthorized.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/XRequestIdHeader"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorMessage"
          examples:
            err401Example:
              value:
                errors:
                  - code: UNAUTHORIZED
                    message: Unauthorized
                    type: ERROR
                    description: The call needs some kind of authorization either expired or not reported.
    "403":
      description: Forbidden.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/XRequestIdHeader"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorMessage"
          examples:
            err403Example:
              value:
                errors:
                  - code: FORBIDDEN
                    type: FATAL
                    message: Forbidden
                    description: You do not have permissions to operate with this invocation.
    "404":
      description: Not Found.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/XRequestIdHeader"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorMessage"
          examples:
            err404Example:
              value:
                errors:
                  - code: NOT_FOUND
                    type: FATAL
                    message: Not Found
                    description: Resource not found.
    "405":
      description: Method Not Allowed.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/XRequestIdHeader"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorMessage"
          examples:
            err405Example:
              value:
                errors:
                  - code: METHOD_NOT_ALLOWED
                    type: ERROR
                    message: Method not allowed
                    description: The request method is known by the server but is not supported by the target resource.
    "406":
      description: Not Acceptable.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/XRequestIdHeader"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorMessage"
          examples:
            err406Example:
              value:
                errors:
                  - code: NOT_ACCEPTABLE
                    type: FATAL
                    message: Not Acceptable
                    description: The format indicated in the "Accept" header of the request is not supported by the destination server.
    "409":
      description: Conflict.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/XRequestIdHeader"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorMessage"
          examples:
            err409Example:
              value:
                errors:
                  - code: CONFLICT
                    type: FATAL
                    message: Conflict
                    description: The request has not been completed due to a conflict with the current status of the resource.
    "413":
      description: Payload Too Large.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/XRequestIdHeader"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorMessage"
          examples:
            err413Example:
              value:
                errors:
                  - code: PAYLOAD_TOO_LARGE
                    type: FATAL
                    message: Payload Too Large
                    description: The size of the client request has exceeded the server's file size limit.
    "414":
      description: URI Too Long.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/XRequestIdHeader"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorMessage"
          examples:
            err414Example:
              value:
                errors:
                  - code: URI_TOO_LONG
                    type: ERROR
                    message: URI Too Long
                    description: The size of the client request has exceeded the server's file size limit.
    "415":
      description: Unsupported Media Type.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/XRequestIdHeader"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorMessage"
          examples:
            err415Example:
              value:
                errors:
                  - code: UNSUPPORTED_MEDIA_TYPE
                    type: FATAL
                    message: Unsupported Media Type
                    description: 'Incorrect format of the response, does not match the one indicated in the "Content-Type" header.'
    "422":
      description: Unprocessable Entity.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/XRequestIdHeader"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorMessage"
          examples:
            err422Example:
              value:
                errors:
                  - code: UNPROCESSABLE_ENTITY
                    type: FATAL
                    message: Unprocessable Entity
                    description: "The structure of the request is correct, but it is not semantically correct."
    "423":
      description: Locked.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/XRequestIdHeader"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorMessage"
          examples:
            err423Example:
              value:
                errors:
                  - code: LOCKED
                    type: FATAL
                    message: Locked
                    description: The resource you are trying to access is blocked.
    "429":
      description: Too Many Requests.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/XRequestIdHeader"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorMessage"
          examples:
            err429Example:
              value:
                errors:
                  - code: TOO_MANY_REQUESTS
                    type: ERROR
                    message: Too Many Requests
                    description: Too many requests in a given period of time and limit has been exceeded.
    "500":
      description: Internal Server Error.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/XRequestIdHeader"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorMessage"
          examples:
            err500Example:
              value:
                errors:
                  - code: INTERNAL_SERVER_ERROR
                    type: FATAL
                    message: Internal server error
                    description: "Unexpected error from the server, it has no way to respond to the invocation."
    "501":
      description: Not Implemented.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/XRequestIdHeader"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorMessage"
          examples:
            err501Example:
              value:
                errors:
                  - code: NOT_IMPLEMENTED
                    type: ERROR
                    message: Not implemented
                    description: The functionality is not supported by the service.
    "502":
      description: Bad Gateway.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/XRequestIdHeader"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorMessage"
          examples:
            err502Example:
              value:
                errors:
                  - code: BAD_GATEWAY
                    type: ERROR
                    message: Bad Gateway
                    description: "Indicates that the server, while acting as a gateway or proxy, received an invalid response from an inbound service that it accessed while attempting to fulfill the request."
    "503":
      description: Service Unavailable.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/XRequestIdHeader"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorMessage"
          examples:
            err503Example:
              value:
                errors:
                  - code: SERVICE_UNAVAILABLE
                    type: ERROR
                    message: Service unavailable
                    description: "Indicates that the server is unavailable to perform the request because it is overloaded or maintenance is being performed, and that it will probably be relieved after some time."
    "504":
      description: Gateway Timeout.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/XRequestIdHeader"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorMessage"
          examples:
            err504Example:
              value:
                errors:
                  - code: GATEWAY_TIMEOUT
                    type: ERROR
                    message: Gateway timeout
                    description: "Indicates that the server, while acting as a gateway or proxy, did not receive a timely response from an upstream server it needed to access to complete the request."
    200GetAllOffices:
      description: OK.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/XRequestIdHeader"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OfficeResponse"
          examples:
            exampleGetAllOffices:
              value:
                data:
                  - officeId: 52
                    name: Axpe Consulting S.L
                  - officeId: 29
                    name: Axpe Consulting S.L
                pagination:
                  offset: 0
                  limit: 10
                  pageNumber: 1
                  totalPages: 2
                  totalElements: 8
                  links:
                    first:
                      href: "https://stoplight.io/mocks/axpe/offices-system/93898885/offices?limit=10"
                    prev:
                      href: "https://stoplight.io/mocks/axpe/offices-system/93898885/offices?offset=2&limit=10"
                    self:
                      href: "https://stoplight.io/mocks/axpe/offices-system/93898885/offices?offset=3&limit=10"
                    next:
                      href: "https://stoplight.io/mocks/axpe/offices-system/93898885/offices?offset=4&limit=10"
                    last:
                      href: "https://stoplight.io/mocks/axpe/offices-system/93898885/offices?offset=10&limit=10"
    200GetOfficeDetail:
      description: OK.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/XRequestIdHeader"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OfficeData"
          examples:
            exampleGetAllOffices:
              value:
                data:
                  officeId: 14
                  name: Axpe Consulting S.L
                  addressId: 236
                  line: "C/Toro, nº71"
                  streetName: C/Toro
                  buildingNumber: nº 71
                  stair: "1"
                  floor: 1
                  doorNumber: 1A
                  postalCode: "37002"
                  province: Salamanca
                  country: ES
    200GetAllSectors:
      description: OK.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/XRequestIdHeader"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SectorResponse"
          examples:
            exampleGetAllSectors:
              value:
                data:
                  - sectorId: 1
                    name: O+D
                  - sectorId: 2
                    name: APIs
                pagination:
                  offset: 0
                  limit: 10
                  pageNumber: 1
                  totalPages: 2
                  totalElements: 8
                  links:
                    first:
                      href: "https://stoplight.io/mocks/axpe/offices-system/93898885/sectors?limit=10"
                    prev:
                      href: "https://stoplight.io/mocks/axpe/offices-system/93898885/sectors?offset=2&limit=10"
                    self:
                      href: "https://stoplight.io/mocks/axpe/offices-system/93898885/sectors?offset=3&limit=10"
                    next:
                      href: "https://stoplight.io/mocks/axpe/offices-system/93898885/sectors?offset=4&limit=10"
                    last:
                      href: "https://stoplight.io/mocks/axpe/offices-system/93898885/sectors?offset=10&limit=10"
    200GetSectorDetail:
      description: OK.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/XRequestIdHeader"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SectorData"
          examples:
            exampleGetSectorDetail:
              value:
                data:
                  sectorId: 1
                  name: O+D
                  isPhysical: true
    200GetWorkstationDetail:
      description: OK.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/XRequestIdHeader"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/WorkstationData"
          examples:
            exampleGetSectorDetail:
              value:
                data:
                  workstationId: 1
                  name: O+D 11
                  position: 80
                  xCoordinate: 20
                  yCoordinate: 100
                  rotation: 180
                  isLocked: true
    200GetAllWorkstations:
      description: OK.
      headers:
        X-Request-ID:
          $ref: "#/components/headers/XRequestIdHeader"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/WorkstationResponse"
          examples:
            exampleGetAllPlace:
              value:
                data:
                  - workstationId: 1
                    name: O+D 11
                    isLocked: false
                  - workstationId: 2
                    name: API 2
                    isLocked: true
                pagination:
                  offset: 0
                  limit: 10
                  pageNumber: 1
                  totalPages: 2
                  totalElements: 8
                  links:
                    first:
                      href: "https://stoplight.io/mocks/axpe/offices-system/93898885/workstations?limit=10"
                    prev:
                      href: "https://stoplight.io/mocks/axpe/offices-system/93898885/workstations?offset=2&limit=10"
                    self:
                      href: "https://stoplight.io/mocks/axpe/offices-system/93898885/workstations?offset=3&limit=10"
                    next:
                      href: "https://stoplight.io/mocks/axpe/offices-system/93898885/workstations?offset=4&limit=10"
                    last:
                      href: "https://stoplight.io/mocks/axpe/offices-system/93898885/workstations?offset=10&limit=10"
  requestBodies:
    OfficeBody:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/Office"
              - $ref: "#/components/schemas/Address"
          example:
            name: Axpe Consulting S.L
            line: "C/Toro, nº71"
            streetName: C/Toro
            buildingNumber: nº 71
            stair: "1"
            floor: 1
            doorNumber: 1A
            postalCode: "37002"
            province: Salamanca
            country: ES
    SectorBody:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/Sector"
              - $ref: "#/components/schemas/TypeOfSector"
          example:
            name: O+D
            isPhysical: false
    WorkstationBody:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/WorkstationName"
              - $ref: "#/components/schemas/WorkstationLocation"
              - $ref: "#/components/schemas/WorkstationState"

          example:
            name: Site 11
            position: 80
            xCoordinate: 20
            yCoordinate: 100
            rotation: 180
            isLocked: true

  securitySchemes:
    oAuthSample:
      type: oauth2
      description: "Oauth2 security scheme used in Worstation Manager project. Flow consists in a client credential grant, where a user gives user:password & clientId:clientSecret to the micro and the micro answers with a Bearer token where the scopes are defined."
      flows:
        clientCredentials:
          tokenUrl: "http://54.217.2.102:8000/login"
          scopes:
            offices-system.offices.read: Allows the user to make GET methods to the offices resources.
            offices-system.offices.write: Allows the user to make POST methods to the offices resources.
            offices-system.offices.update: Allows the user to make PUT methods to the offices resources.
            offices-system.offices.delete: Allows the user to make DELETE methods to the offices resources.
            offices-system.offices.ALL: "Allows the user to make GET, POST, PUT, DELETE methods to the offices resources."
            offices-system.sectors.read: Allows the user to make GET methods to the sectors resources.
            offices-system.sectors.write: Allows the user to make POST methods to the sectors resources.
            offices-system.sectors.update: Allows the user to make PUT methods to the sectors resources.
            offices-system.sectors.delete: Allows the user to make DELETE methods to the sectors resources.
            offices-system.sectors.ALL: "Allows the user to make GET, POST, PUT, DELETE methods to the sectors resources."
            offices-system.workstations.read: Allows the user to make GET methods to the workstations resources.
            offices-system.workstations.write: Allows the user to make POST methods to the workstations resources.
            offices-system.workstations.update: Allows the user to make PUT methods to the workstations resources.
            offices-system.workstations.delete: Allows the user to make DELETE methods to the workstations resources.
            offices-system.workstations.ALL: "Allows the user to make GET, POST, PUT, DELETE methods to the workstations resources."
            offices-system.ALL.ALL: "Allows the user to make GET, POST, PUT, DELETE methods to ALL resources."
            offices-system.ALL.read: Allows the user to make GET methods to ALL resources.
            offices-system.ALL.write: Allows the user to make POST methods to ALL resources.
            offices-system.ALL.update: Allows the user to make PUT methods to ALL resources.
            offices-system.ALL.delete: Allows the user to make DELETE methods to ALL resources.
