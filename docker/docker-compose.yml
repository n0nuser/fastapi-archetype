version: '3.9'
services:
  app:
    build:
      context: ../
      dockerfile: docker/Dockerfile
    container_name: app
    restart: unless-stopped
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; uvicorn src.app:app --host 0.0.0.0 --port 8000'
    env_file:
      - ../src/.env
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - app-network
    volumes:
      - ./logs:/opt/logs/

  db:
    image: postgres:15
    container_name: app-db
    restart: unless-stopped
    env_file:
      - ../src/.env
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-app_db}
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD:-admin}
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    networks:
      - app-network
    depends_on:
      - db
    ports:
      - "5050:80"
    entrypoint: /bin/sh -c "chmod 600 /pgpass; /entrypoint.sh;"
    user: root
    configs:
      - source: servers.json
        target: /pgadmin4/servers.json
      - source: pgpass
        target: /pgpass

configs:
  pgpass:
    content: db:5432:*:postgres:postgres
  servers.json:
    content: |
      {"Servers": {"1": {
        "Group": "Servers",
        "Name": "app_server",
        "Host": "db",
        "Port": 5432,
        "MaintenanceDB": "postgres",
        "Username": "postgres",
        "PassFile": "/pgpass",
        "SSLMode": "prefer"
      }}}

networks:
  app-network:
    driver: bridge
    name: app-network
volumes:
  app-db-data:
  logs:
